{"version":3,"sources":["utils/API.js","components/Header.js","pages/ResultDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Header","ResultDisplay","state","allUsers","filteredUsers","searchInput","sortOption","API","then","employees","setState","data","results","className","this","length","exployees","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAGc,EAEA,WACN,OAAOA,IAAMC,IAAI,kDCMVC,MAVf,WAEI,OAII,aAFA,CAEA,uBCgDOC,E,4MA/CXC,MAAQ,CACJC,SAAU,GACVC,cAAe,GACfC,YAAa,GACbC,WAAY,I,kEAIK,IAAD,OAEhBC,IAAeC,MAAK,SAAAC,GAGhB,EAAKC,SAAS,CAGVP,SAAUM,EAAUE,KAAKC,QAGzBR,cAAeK,EAAUE,KAAKC,e,+BAgBtC,OACI,sBAAKC,UAAU,MAAf,UAEI,cAAC,EAAD,IACCC,KAAKZ,MAAMC,SAASY,OAAS,GAC1B,cAACd,EAAD,CAAee,UAAWF,KAAKZ,MAAMC,kB,GA3C7Bc,IAAMC,WCEnBC,MALf,WAEE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ee9f085f.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default{\n\n    getUsers: function() {\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n    }\n};","import React from \"react\";\n\nfunction Header() {\n\n    return (\n\n        // bootstrap jumbotron\n\n        <div> </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport \"../styles/App.css\";\nimport API from \"../utils/API.js\"\nimport Header from \"../components/Header\"\n\n// main display on app page\nclass ResultDisplay extends React.Component {\n\n    // state initial (schema for changes)\n    state = {\n        allUsers: [],\n        filteredUsers: [],\n        searchInput: \"\",\n        sortOption: \"\"\n    };\n\n    // component did mount\n    componentDidMount() {\n        // call API funcition in utils folder\n        API.getUsers().then(employees => {\n\n            // set up new state (setState)\n            this.setState({\n\n                // allUsers: []\n                allUsers: employees.data.results,\n\n                // filteredUsers: []\n                filteredUsers: employees.data.results\n            });\n        });\n    }\n\n\n    // handleInputChange \n    // setState searchInput\n    // filter users by every letter entered in searchInput\n    // sort if relevant\n\n    // sortedUsers display on page\n    // use js to sort (by string, sortOptions: by name, DOB etc.)\n    // ascending/decending \n\n    render() {\n        return (\n            <div className=\"App\">\n\n                <Header />\n                {this.state.allUsers.length > 0 &&\n                    <ResultDisplay exployees={this.state.allUsers} />\n                }\n            </div>\n        );\n    }\n}\n\nexport default ResultDisplay;","import React from \"react\";\nimport ResultDisplay from \"./pages/ResultDisplay\";\n\nfunction App() {\n\n  return <ResultDisplay />\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}