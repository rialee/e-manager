{"version":3,"sources":["utils/API.js","components/Result/index.js","components/ResultContainer/index.js","components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Results","props","console","log","employee","sortedResults","className","map","res","index","alt","src","picture","large","name","first","last","phone","email","dob","date","slice","ResultContainer","state","allUsers","filteredUsers","searchInput","sortOptions","handleInputChange","e","target","value","setState","filteredResult","filter","toLowerCase","startsWith","toLocaleLowerCase","HandleSortResult","preventDefault","sorted","sort","a","b","localeCompare","API","then","data","results","type","aria-label","onChange","this","placeholder","onClick","Result","React","Component","Header","Jumbotron","fluid","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.242c906a.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default{\n\n    getUsers: function() {\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n    }\n};","import React from \"react\";\nimport \"./style.css\";\n\n// SearchResult function (props) - component\nfunction Results(props) {\n\n  console.log(props)\n\n  const employee = props.sortedResults\n\n  // return JSX\n  return (\n\n    <div className=\"wrapper\">\n      {employee ? employee.map((res, index) => (\n\n        <div className=\"row\" key={index}>\n          <img alt=\"1\" className=\"result-row employee-pic col-2\" src={res.picture.large} />\n          <div className=\"result-row col-2\">{res.name.first} {res.name.last}</div>\n          <div className=\"result-row col-2\">{res.phone}</div>\n          <div className=\"result-row col-3\">{res.email}</div>\n          <div className=\"result-row col-2\">{res.dob.date.slice(0, 10)}</div>\n\n        </div>\n\n      )) : \"No results found\"}\n    </div>\n\n  )\n}\n\n\nexport default Results;","import React from \"react\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\nimport Result from \"../Result\";\n\n\n// main display on app page\nclass ResultContainer extends React.Component {\n\n    // state initial (schema for changes)\n    state = {\n        allUsers: [],\n        filteredUsers: [],\n        searchInput: \"\",\n        sortOptions: \"\",\n    };\n\n    // component did mount\n    componentDidMount() {\n        // call API funcition in utils folder\n        API.getUsers()\n            .then(res => {\n\n                // set up new state (setState)\n                this.setState({\n\n                    // allUsers: []\n                    allUsers: res.data.results,\n\n                    // filteredUsers: []\n                    filteredUsers: res.data.results\n                });\n            });\n    };\n\n\n    // handleInputChange \n    handleInputChange = (e) => {\n\n        console.log(e.target);\n        const { name, value } = e.target;\n\n        // setState searchInput\n        this.setState(\n            {\n                [name]: value\n\n            },\n\n            () => {\n\n                // filter users by every letter entered in searchInpu\n                const filteredResult = this.state.allUsers.filter(\n                    (res) => res.name.first.toLowerCase().startsWith(this.state.searchInput.toLocaleLowerCase())\n                );\n\n                this.setState(\n                    {\n                        filteredUsers: filteredResult,\n                    }\n                );\n            }\n        );\n\n    };\n\n\n\n\n    // sort users display on page\n    HandleSortResult = (e) => {\n\n        e.preventDefault();\n\n        // use js to sort (by string, sortOptions: by name, DOB etc.)\n        // ascending/decending \n        if (this.state.sortOptions !== \"ascending\") {\n\n            console.log(\"sorting...!\");\n\n            const sorted = this.state.allUsers.sort((a, b) => a.name.first.localeCompare(b.name.first));\n\n            // setting state - ascending\n            this.setState({\n                filteredUsers: sorted,\n                sortOptions: \"ascending\"\n            });\n        }\n\n        else {\n\n            const sorted = this.state.allUsers.sort((a, b) => b.name.first.localeCompare(a.name.first))\n\n            // setting state - descending\n            this.setState({\n                filteredUsers: sorted,\n                sortOptions: \"descending\"\n            })\n        };\n    };\n\n\n    render() {\n        return (\n\n            <div className=\"Result wrapper\">\n\n                {/* search bar */}\n                <form className=\"search-block\">\n\n\n\n                    <input className=\"search-form\" name=\"searchInput\" type=\"text\" aria-label=\"Search\" onChange={this.handleInputChange} value={this.state.searchInput} placeholder=\"Enter Name Here\"></input>\n\n                    {/* search button */}\n                    <button className=\"btn-light sort\" onClick={this.HandleSortResult}>Sort by name</button>\n\n                </form>\n\n\n\n                <div className=\"wrapper result-container\">\n                    \n                    {/* result display table */}\n                    <div className=\"row title-row\">\n\n                        <div className=\"title col-2\"></div>\n                        <div className=\"title click col-2\" onClick={this.HandleSortResult}>Name:</div>\n                        <div className=\"title col-2\">Phone:</div>\n                        <div className=\"title col-3\">Email:</div>\n                        <div className=\"title col-2\">Birthday:</div>\n\n                    </div>\n\n\n                    <Result sortedResults={this.state.filteredUsers} />\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default ResultContainer;","import React from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport \"./style.css\";\n\n\n\n\nfunction Header() {\n\n    return (\n        \n        <Jumbotron fluid>\n            <Container>\n                <h1>E-Meet Network</h1>\n                <p>\n                A place to get to know fellow coworkers\n                </p>\n            </Container>\n        </Jumbotron>\n        \n    )\n};\n\nexport default Header;","import React from \"react\";\nimport ResultContainer from \"./components/ResultContainer\";\nimport \"./styles/App.css\";\nimport Header from \"./components/Header\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n\n  return (\n\n    <>\n      <div className=\"header\">\n\n        {/* jumbotron header */}\n        <Header />\n\n      </div>\n\n      {/* result container */}\n      <ResultContainer />\n\n    </>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}